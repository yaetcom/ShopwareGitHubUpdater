{"version":3,"file":"kaws-plugin-git-updater-BPO2No9V.js","sources":["../../../app/administration/src/component/meteor/sw-meteor-card/sw-meteor-card.html.twig","../../../app/administration/src/component/meteor/sw-meteor-card/index.js","../../../app/administration/src/module/sw-extension/component/sw-extension-card-base/sw-extension-card-base.html.twig","../../../app/administration/src/module/sw-extension/component/sw-extension-card-base/index.js","../../../app/administration/src/module/sw-extension/page/sw-extension-my-extensions-index/sw-extension-my-extensions-index.html.twig","../../../app/administration/src/module/sw-extension/page/sw-extension-my-extensions-index/index.js"],"sourcesContent":["{% block sw_meteor_card_content_wrapper %}\r\n    {% parent %}\r\n    <div v-if=\"isExtension\" style=\"background-color:rgba(168, 129, 175, 0.2); border-bottom-left-radius:8px;border-bottom-right-radius:8px;\">\r\n        <hr style=\"opacity:0.3\">\r\n        <div class=\"inner-content\">\r\n            <div class=\"inline-form-row\">\r\n                <!-- Name Feld -->\r\n                <div class=\"inline-field-container\">\r\n                    <label class=\"inline-label rvdw-color-true-text\">Quelle:</label>\r\n                    <sw-text-field\r\n                            v-model:value=\"localRepositoryUrl\"\r\n                            :placeholder=\"'Quelle (URL)'\"\r\n                            class=\"inline-input\"\r\n                            @blur=\"onSaveSettings\"\r\n                    />\r\n                </div>\r\n                <div class=\"button-container\">\r\n                    <sw-button\r\n                            variant=\"primary\"\r\n                            @click=\"checkUpdate\"\r\n                            class=\"update-button rvdw-color-false\"\r\n                            :disabled=\"!localRepositoryUrl || isLoadingVersions\"\r\n                            :loading=\"isLoadingVersions\"\r\n                    >\r\n                        {{ isLoadingVersions ? 'Laden...' : 'Check' }}\r\n                    </sw-button>\r\n                </div>\r\n                <!-- Version Dropdown -->\r\n                <div class=\"inline-field-container\">\r\n                    <label class=\"inline-label rvdw-color-true-text\">Version:</label>\r\n                    <sw-select-field\r\n                            v-model:value=\"selectedVersion\"\r\n                            :placeholder=\"versionOptions.length > 0 ? null : 'Version auswählen'\"\r\n                            class=\"inline-input version\"\r\n                            :disabled=\"isLoadingVersions\"\r\n                    >\r\n                        <option\r\n                            v-for=\"option in versionOptions\"\r\n                            :key=\"option.value\"\r\n                            :value=\"option.value\"\r\n                        >\r\n                            {{ option.label }}\r\n                        </option>\r\n                    </sw-select-field>\r\n                </div>\r\n\r\n                <!-- Update Button -->\r\n                <div class=\"button-container\">\r\n                    <sw-button\r\n                            variant=\"primary\"\r\n                            @click=\"Update\"\r\n                            class=\"update-button rvdw-color-true\"\r\n                            :disabled=\"!selectedVersion || isLoadingVersions\"\r\n                            :loading=\"isLoadingVersions\"\r\n                    >\r\n                        {{ isLoadingVersions ? 'Laden...' : 'Update' }}\r\n                    </sw-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n{% endblock %}","import template from './sw-meteor-card.html.twig';\r\nimport './sw-meteor-card.scss';\r\n\r\nconst { Criteria } = Shopware.Data;\r\nconst { Component, Utils, Mixin } = Shopware;\r\n\r\nComponent.override('sw-meteor-card', {\r\n    template,\r\n\r\n    inject: [\r\n        'systemConfigApiService',\r\n        'shopwareExtensionService',\r\n        'extensionStoreActionService',\r\n        'cacheApiService',\r\n        'repositoryFactory'\r\n    ],\r\n\r\n    mixins: ['sw-extension-error'],\r\n\r\n    emits: ['update-list'],\r\n\r\n\r\n    props: {\r\n        title: {\r\n            type: String,\r\n            required: false,\r\n            default: null,\r\n        },\r\n        hero: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        isLoading: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        large: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        defaultTab: {\r\n            type: String,\r\n            required: false,\r\n            default: null,\r\n        },\r\n        isExtension: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: true,\r\n        },\r\n        extension: {\r\n            type: Object,\r\n            required: false,\r\n            default: () => ({}),\r\n        },\r\n    },\r\n\r\n\r\n    data() {\r\n        return {\r\n            githubUrl: null,\r\n            versionOptions: [],\r\n            selectedVersion: null,\r\n            isLoadingVersions: false,\r\n            isLoading: false,\r\n            updateMessage: '',\r\n            localRepositoryUrl: '',\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        currentExtension() {\r\n            // Versuche Extension-Daten von verschiedenen Quellen zu bekommen\r\n            if (this.extension && Object.keys(this.extension).length > 0) {\r\n                return this.extension;\r\n            }\r\n            \r\n            // Fallback: Suche in Parent-Component\r\n            if (this.$parent && this.$parent.extension) {\r\n                return this.$parent.extension;\r\n            }\r\n            \r\n            // Fallback: Suche in Grandparent\r\n            if (this.$parent && this.$parent.$parent && this.$parent.$parent.extension) {\r\n                return this.$parent.$parent.extension;\r\n            }\r\n            \r\n            return {};\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.checkForPendingUpdate();\r\n    },\r\n\r\n    watch: {\r\n        currentExtension: {\r\n            handler(newExtension) {\r\n                if (newExtension && newExtension.localId) {\r\n                    this.loadExtensionGitSettings(newExtension);\r\n                }\r\n            },\r\n            immediate: true\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        async checkUpdate() {\r\n            if (!this.localRepositoryUrl) {\r\n                this.createNotificationError({\r\n                    title: 'Fehler',\r\n                    message: 'Bitte geben Sie eine GitHub-URL ein.',\r\n                });\r\n                return;\r\n            }\r\n\r\n            this.isLoadingVersions = true;\r\n            console.log('Loading started, isLoadingVersions:', this.isLoadingVersions);\r\n            try {\r\n                console.log('Checking updates for:', this.currentExtension.name, 'from:', this.localRepositoryUrl);\r\n                // Temporär repositoryUrl für die API setzen\r\n                const tempExtension = { ...this.currentExtension, repositoryUrl: this.localRepositoryUrl };\r\n                await this.checkForNewVersion(tempExtension);\r\n            } catch (error) {\r\n                this.createNotificationError({\r\n                    title: 'Fehler beim Laden der Versionen',\r\n                    message: error.message,\r\n                });\r\n            } finally {\r\n                this.isLoadingVersions = false;\r\n                console.log('Loading finished, isLoadingVersions:', this.isLoadingVersions);\r\n            }\r\n        },\r\n\r\n        async Update() {\r\n            if (!this.selectedVersion) {\r\n                this.createNotificationError({\r\n                    title: 'Fehler',\r\n                    message: 'Bitte wählen Sie eine Version aus.',\r\n                });\r\n                return;\r\n            }\r\n            this.updatePluginGithub(this.selectedVersion);\r\n            console.log('Updating extension:', this.currentExtension.name, 'to version:', this.selectedVersion);\r\n        },\r\n\r\n        async loadExtensionGitSettings(extension) {\r\n            try {\r\n                const extensionGitRepository = this.repositoryFactory.create('plugin_git');\r\n                const criteria = new Criteria();\r\n                criteria.addFilter(Criteria.equals('pluginId', extension.localId));\r\n\r\n                const gitEntries = await extensionGitRepository.search(criteria, Shopware.Context.api);\r\n                const gitEntry = gitEntries.first();\r\n\r\n                if (gitEntry && gitEntry.githubUrl) {\r\n                    this.localRepositoryUrl = gitEntry.githubUrl;\r\n                } else {\r\n                    this.localRepositoryUrl = '';\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to load git settings:', error);\r\n                this.localRepositoryUrl = '';\r\n            }\r\n        },\r\n\r\n        async checkForPendingUpdate() {\r\n            const pendingUpdate = localStorage.getItem('pendingExtensionUpdate');\r\n            if (pendingUpdate) {\r\n                try {\r\n                    const updateData = JSON.parse(pendingUpdate);\r\n                    console.log('Pending update found:', updateData);\r\n                    \r\n                    // Prüfe ob das die richtige Extension ist\r\n                    if (updateData.extensionName === this.currentExtension.name) {\r\n                        // LocalStorage Flag entfernen\r\n                        localStorage.removeItem('pendingExtensionUpdate');\r\n                        \r\n                        // Shopware Extension Update durchführen\r\n                        await this.shopwareExtensionService.updateExtension(\r\n                            updateData.extensionName,\r\n                            updateData.extensionType,\r\n                            false\r\n                        );\r\n                        \r\n                        this.createNotificationSuccess({\r\n                            title: 'Update abgeschlossen',\r\n                            message: `${this.currentExtension.label} wurde erfolgreich auf Version ${updateData.version} aktualisiert!`,\r\n                        });\r\n                        \r\n                        console.log('Extension update completed');\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Failed to apply pending update:', error);\r\n                    localStorage.removeItem('pendingExtensionUpdate');\r\n                }\r\n            }\r\n        },\r\n\r\n        async updatePluginGithub(version) {\r\n            this.isLoading = true;\r\n            this.updateMessage = 'Lade Plugin von GitHub...';\r\n            try {\r\n                const response = await fetch('/api/_action/github/update-plugin', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${Shopware.Context.api.authToken.access}`,\r\n                    },\r\n                    body: JSON.stringify({ \r\n                        url: this.localRepositoryUrl, \r\n                        name: this.currentExtension.name,\r\n                        version: version\r\n                    }),\r\n                });\r\n\r\n\r\n                const result = await response.json();\r\n                console.log(result);\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(result.message || 'Update fehlgeschlagen.');\r\n                }\r\n                \r\n                this.createNotificationSuccess({\r\n                    title: 'Update erfolgreich',\r\n                    message: this.currentExtension.label + ' wurde auf Version ' + version + ' aktualisiert. Seite wird neu geladen...',\r\n                });\r\n\r\n                // Flag setzen, dass nach Reload ein Update durchgeführt werden soll\r\n                localStorage.setItem('pendingExtensionUpdate', JSON.stringify({\r\n                    extensionName: this.currentExtension.name,\r\n                    extensionType: this.currentExtension.type,\r\n                    version: version\r\n                }));\r\n\r\n                // Cache leeren und Seite neu laden\r\n                setTimeout(async () => {\r\n                    await this.cacheApiService.clear();\r\n                    window.location.reload();\r\n                }, 2000);\r\n                \r\n                this.isLoading = false;\r\n            } catch (error) {\r\n                this.createNotificationError({\r\n                    title: 'Update fehlgeschlagen',\r\n                    message: 'Ungültige URL',\r\n                });\r\n                this.isLoading = false;\r\n            }\r\n        },\r\n\r\n        async checkForNewVersion(extension) {\r\n            try {\r\n                if (extension.repositoryUrl.length > 0) {\r\n                    const response = await fetch(`/api/_action/github/check-version?name=${encodeURIComponent(extension.repositoryUrl)}`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            Authorization: `Bearer ${Shopware.Context.api.authToken.access}`,\r\n                        },\r\n                    });\r\n\r\n                    const result = await response.json();\r\n                    console.log(result);\r\n                    \r\n                    if (result.success && result.versions) {\r\n                        // Alle Versionen verarbeiten\r\n                        const allVersions = result.versions.map(version => {\r\n                            // Entferne \"v\" am Anfang falls vorhanden\r\n                            const cleanVersion = version.replace(/^v/, '');\r\n                            return {\r\n                                original: version,\r\n                                clean: cleanVersion,\r\n                                label: cleanVersion,\r\n                                value: version\r\n                            };\r\n                        });\r\n\r\n                        // Aktuelle Version für Vergleich vorbereiten\r\n                        const currentVersion = extension.version.replace(/^v/, '');\r\n                        \r\n                        // Filtere nur höhere Versionen\r\n                        const higherVersions = allVersions.filter(version => {\r\n                            return this.isVersionHigher(version.clean, currentVersion);\r\n                        });\r\n\r\n                        // Update die Options für das Select-Field\r\n                        this.versionOptions = higherVersions.map(version => ({\r\n                            label: version.label,\r\n                            value: version.value\r\n                        }));\r\n\r\n                        if (higherVersions.length > 0) {\r\n                            // Automatisch die erste (neueste) Version auswählen\r\n                            this.selectedVersion = higherVersions[0].value;\r\n                            \r\n                            this.createNotificationInfo({\r\n                                title: `${higherVersions.length} neuere Version(en) gefunden`,\r\n                                message: `Neueste verfügbare Version: ${higherVersions[0].label}`,\r\n                            });\r\n                        } else {\r\n                            this.createNotificationInfo({\r\n                                title: `${extension.label} ist aktuell`,\r\n                                message: `Du hast bereits die neueste Version: ${currentVersion}`,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        this.createNotificationError({\r\n                            title: `Fehler mit URL`,\r\n                            message: `Ungültige URL oder keine Versionen gefunden`,\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.createNotificationError({\r\n                        title: `Fehler mit URL`,\r\n                        message: `Keine URL hinterlegt.`,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                this.createNotificationError({\r\n                    title: `Fehler bei der Versionsprüfung für ${extension.name}`,\r\n                    message: error.message,\r\n                });\r\n            }\r\n        },\r\n\r\n        // Hilfsfunktion zum Vergleichen von Versionen\r\n        compareVersions(a, b) {\r\n            const aParts = a.split('.').map(Number);\r\n            const bParts = b.split('.').map(Number);\r\n            \r\n            for (let i = 0; i < Math.max(aParts.length, bParts.length); i++) {\r\n                const aPart = aParts[i] || 0;\r\n                const bPart = bParts[i] || 0;\r\n                \r\n                if (aPart > bPart) return 1;\r\n                if (aPart < bPart) return -1;\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        // Prüft ob Version A höher als Version B ist\r\n        isVersionHigher(versionA, versionB) {\r\n            return this.compareVersions(versionA, versionB) > 0;\r\n        },\r\n\r\n        updatePluginKaws() {\r\n            this.clearCacheAndReloadPage();\r\n            this.clearCacheAndReloadPage();\r\n        },\r\n\r\n        clearCacheAndReloadPage() {\r\n            return this.cacheApiService.clear().then(() => {\r\n                window.location.reload();\r\n            });\r\n        },\r\n\r\n        async onSaveSettings() {\r\n            try {\r\n                this.isLoading = true;\r\n\r\n                const extensionGitRepository = this.repositoryFactory.create('plugin_git');\r\n\r\n                if (!this.currentExtension.localId) {\r\n                    throw new Error('Keine lokale Plugin-ID gefunden.');\r\n                }\r\n\r\n                const extensionGitCriteria = new Criteria();\r\n                extensionGitCriteria.addFilter(Criteria.equals('pluginId', this.currentExtension.localId));\r\n\r\n                const existingGitEntryResult = await extensionGitRepository.search(extensionGitCriteria, Shopware.Context.api);\r\n                const existingGitEntry = existingGitEntryResult.first();\r\n\r\n                // Wenn URL leer ist\r\n                if (!this.localRepositoryUrl || this.localRepositoryUrl.trim() === '') {\r\n                    if (existingGitEntry) {\r\n                        // Eintrag löschen falls vorhanden\r\n                        await extensionGitRepository.delete(existingGitEntry.id, Shopware.Context.api);\r\n                        this.createNotificationSuccess({\r\n                            title: 'Erfolgreich gelöscht',\r\n                            message: 'Die Git-Einstellungen wurden entfernt.',\r\n                        });\r\n                    }\r\n                    // Nichts tun wenn kein Eintrag vorhanden ist\r\n                    return;\r\n                }\r\n\r\n                // URL ist nicht leer - speichern\r\n                let entity;\r\n\r\n                if (existingGitEntry) {\r\n                    entity = existingGitEntry;\r\n                } else {\r\n                    entity = extensionGitRepository.create(Shopware.Context.api);\r\n                    entity.pluginId = this.currentExtension.localId;\r\n                    entity.source = 'git'; // Standard Wert für source\r\n                }\r\n                entity.githubUrl = this.localRepositoryUrl;\r\n                entity.source = 'git'; // Sicherstellen dass source immer gesetzt ist\r\n\r\n                await extensionGitRepository.save(entity, Shopware.Context.api);\r\n\r\n                this.createNotificationSuccess({\r\n                    title: 'Erfolgreich gespeichert',\r\n                    message: 'Die Git-Einstellungen wurden gespeichert.',\r\n                });\r\n\r\n            } catch (error) {\r\n                this.createNotificationError({\r\n                    title: 'Fehler beim Speichern',\r\n                    message: error.message,\r\n                });\r\n            } finally {\r\n                this.isLoading = false;\r\n            }\r\n        },\r\n\r\n\r\n\r\n}\r\n\r\n});","<sw-meteor-card\r\n        class=\"sw-extension-card-base\"\r\n        :class=\"extensionCardClasses\"\r\n        :isExtension=\"true\"\r\n        :extension=\"extension\"\r\n>\r\n        <sw-loader v-if=\"isLoading\" />\r\n\r\n        <div class=\"sw-extension-card-base__switch\">\r\n            {% block sw_extension_card_base_activation_switch_switch %}\r\n\r\n                <mt-switch\r\n                        v-model=\"isActive\"\r\n                        v-tooltip=\"{\r\n                showDelay: 300,\r\n                message: $tc('sw-extension-store.component.sw-extension-card-base.allowDisableTooltip'),\r\n                disabled: allowDisable\r\n            }\"\r\n                        :disabled=\"extensionManagementDisabled || !isInstalled || (isActive && !allowDisable)\"\r\n                />\r\n\r\n            {% endblock %}\r\n        </div>\r\n\r\n        <sw-extension-icon :src=\"image\" />\r\n\r\n        {% block sw_extension_card_base_activation_switch %}\r\n            <div class=\"sw-extension-card-base__info\">\r\n                <section>\r\n            <span class=\"sw-extension-card-base__info-name\">\r\n                {{ extension.label }}\r\n            </span>\r\n\r\n                    {% block sw_extension_card_base_info_inactive_label %}\r\n                        <span\r\n                                v-if=\"isInstalled && !extension.active\"\r\n                                class=\"sw-extension-card-base__info-inactive\"\r\n                        >\r\n                {{ $tc('sw-extension-store.component.sw-extension-card-base.inactiveLabel') }}\r\n            </span>\r\n                    {% endblock %}\r\n                </section>\r\n            </div>\r\n        {% endblock %}\r\n\r\n        <div class=\"sw-extension-card-base__meta-info\">\r\n            {% block sw_extension_card_base_info_content %}\r\n                <section>\r\n            <span\r\n                    v-if=\"extension.version\"\r\n                    class=\"sw-extension-card-base__meta-info-version\"\r\n            >\r\n                {{ $tc('sw-extension.my-extensions.listing.version') }}: {{ extension.version }}\r\n            </span>\r\n\r\n                    <span v-if=\"!extensionManagementDisabled && isUpdateable\">\r\n                <a\r\n                        href=\"#\"\r\n                        @click.prevent=\"updateExtension(false)\"\r\n                >\r\n                    {{ $tc('sw-extension.my-extensions.listing.update') }}\r\n                </a>\r\n            </span>\r\n                </section>\r\n                <span v-if=\"isInstalled && extension.updatedAt\" class=\"rvdw-color-true-text\">\r\n            Aktualisiert:\r\n        {{ dateFilter(extension.updatedAt.date, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}\r\n    </span>\r\n            {% endblock %}\r\n\r\n            <span v-if=\"isInstalled\">\r\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.installedLabel') }}\r\n                {{ dateFilter(extension.installedAt.date, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}\r\n        </span>\r\n\r\n            <span v-else-if=\"extension.storeLicense\">\r\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.purchasedLabel') }}\r\n                {{ dateFilter(extension.storeLicense.creationDate, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}\r\n        </span>\r\n        </div>\r\n\r\n        <div class=\"sw-extension-card-base__main-action\">\r\n        <span\r\n                v-if=\"!isInstalled\"\r\n                class=\"sw-extension-card-base__open-extension\"\r\n                role=\"button\"\r\n                tabindex=\"0\"\r\n                @click=\"openPermissionsModalForInstall\"\r\n                @keydown.enter=\"openPermissionsModalForInstall\"\r\n        >\r\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.installExtensionLabel') }}\r\n        </span>\r\n            <router-link\r\n                    v-else-if=\"extension.configurable\"\r\n                    :to=\"{ name: 'sw.extension.config', params: { namespace: extension.name } }\"\r\n            >\r\n                {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.config') }}\r\n            </router-link>\r\n        </div>\r\n\r\n        <sw-context-button\r\n                v-if=\"showContextMenu\"\r\n                class=\"sw-extension-card-base__context-menu\"\r\n                :menu-width=\"180\"\r\n        >\r\n            {% block sw_extension_card_base_context_menu_actions %}\r\n                <sw-context-menu-item\r\n                        v-if=\"openLinkExists && extension.active\"\r\n                        :disabled=\"!openLinkExists\"\r\n                        :router-link=\"link\"\r\n                >\r\n                    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.openExtension') }}\r\n                </sw-context-menu-item>\r\n\r\n                <sw-context-menu-item\r\n                        v-if=\"privacyPolicyLink\"\r\n                        @click=\"openPrivacyAndSafety\"\r\n                >\r\n            <span class=\"sw-extension-card-base__context-menu-privacy-link\">\r\n                {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.privacyAndSafetyLabel') }}\r\n                <mt-icon\r\n                        name=\"regular-external-link-s\"\r\n                        size=\"10px\"\r\n                />\r\n            </span>\r\n                </sw-context-menu-item>\r\n\r\n                <sw-context-menu-item\r\n                        v-if=\"isInstalled && extension.privacyPolicyExtension\"\r\n                        @click=\"openPrivacyModal\"\r\n                >\r\n\r\n                    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.policyExtensions') }}\r\n                </sw-context-menu-item>\r\n\r\n                <sw-context-menu-item\r\n                        v-if=\"isInstalled && permissions\"\r\n                        @click=\"openPermissionsModal\"\r\n                >\r\n\r\n                    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.permissions') }}\r\n                </sw-context-menu-item>\r\n\r\n                <sw-context-menu-item\r\n                        v-if=\"!extensionManagementDisabled && isUpdateable\"\r\n                        @click=\"updateExtension(false)\"\r\n                >\r\n                    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.updateLabel', { version: extension.latestVersion }, 0) }}\r\n                </sw-context-menu-item>\r\n\r\n                {% block sw_extension_card_base_context_menu_actions_additional %}{% endblock %}\r\n\r\n                <sw-context-menu-item\r\n                        v-if=\"!extensionManagementDisabled && extension.storeLicense && extension.storeLicense.variant === 'rent' && extension.storeLicense.expirationDate === null\"\r\n                        class=\"sw-extension-card-base__cancel-and-remove-link\"\r\n                        variant=\"danger\"\r\n                        @click=\"openRemovalModal\"\r\n                >\r\n                    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.cancelAndRemoveLabel') }}\r\n                </sw-context-menu-item>\r\n\r\n                <sw-context-menu-item\r\n                        v-else-if=\"!extensionManagementDisabled && isRemovable\"\r\n                        class=\"sw-extension-card-base__remove-link\"\r\n                        variant=\"danger\"\r\n                        @click=\"openRemovalModal\"\r\n                >\r\n                    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.removeLabel') }}\r\n                </sw-context-menu-item>\r\n\r\n                <sw-context-menu-item\r\n                        v-if=\"!extensionManagementDisabled && isUninstallable\"\r\n                        variant=\"danger\"\r\n                        @click=\"openUninstallModal\"\r\n                >\r\n                    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.uninstallLabel') }}\r\n                </sw-context-menu-item>\r\n            {% endblock %}\r\n        </sw-context-button>\r\n\r\n        {% block sw_extension_card_base_modals %}\r\n            <sw-extension-uninstall-modal\r\n                    v-if=\"showUninstallModal\"\r\n                    :extension-name=\"extension.label\"\r\n                    :is-licensed=\"extension.storeLicense !== null\"\r\n                    :is-loading=\"isLoading\"\r\n                    @modal-close=\"closeUninstallModal\"\r\n                    @uninstall-extension=\"closeModalAndUninstallExtension\"\r\n            />\r\n\r\n            <sw-extension-removal-modal\r\n                    v-if=\"showRemovalModal\"\r\n                    :extension-name=\"extension.label\"\r\n                    :is-licensed=\"extension.storeLicense !== null && extension.storeLicense.variant === 'rent'\"\r\n                    :is-loading=\"isLoading\"\r\n                    @modal-close=\"closeRemovalModal\"\r\n                    @remove-extension=\"closeModalAndRemoveExtension\"\r\n            />\r\n\r\n            <sw-extension-permissions-modal\r\n                    v-if=\"showPermissionsModal\"\r\n                    :extension-label=\"extension.label\"\r\n                    :permissions=\"permissions\"\r\n                    :domains=\"extension.domains\"\r\n                    :action-label=\"permissionModalActionLabel\"\r\n                    @modal-close=\"closePermissionsModal\"\r\n                    @close-with-action=\"closePermissionsModalAndInstallExtension\"\r\n            />\r\n\r\n            <sw-extension-privacy-policy-extensions-modal\r\n                    v-if=\"showPrivacyModal\"\r\n                    :extension-name=\"extension.label\"\r\n                    :privacy-policy-extension=\"extension.privacyPolicyExtension\"\r\n                    @modal-close=\"closePrivacyModal\"\r\n            />\r\n\r\n            <sw-extension-permissions-modal\r\n                    v-if=\"showConsentAffirmationModal\"\r\n                    :title=\"consentAffirmationModalTitle\"\r\n                    :extension-label=\"extension.label\"\r\n                    :permissions=\"consentAffirmationDeltas.permissions\"\r\n                    :domains=\"consentAffirmationDeltas.domains\"\r\n                    :action-label=\"consentAffirmationModalActionLabel\"\r\n                    :close-label=\"consentAffirmationModalCloseLabel\"\r\n                    :description=\"consentAffirmationModalDescription\"\r\n                    @modal-close=\"closeConsentAffirmationModal\"\r\n                    @close-with-action=\"closeConsentAffirmationModalAndUpdateExtension\"\r\n            />\r\n        {% endblock %}\r\n</sw-meteor-card>\r\n","import template from './sw-extension-card-base.html.twig';\r\n\r\nconst { Criteria } = Shopware.Data;\r\nconst { Component, Utils, Mixin } = Shopware;\r\n\r\nComponent.override('sw-extension-card-base', {\r\n    template,\r\n\r\n    inject: [\r\n        'systemConfigApiService',\r\n        'shopwareExtensionService',\r\n        'extensionStoreActionService',\r\n        'cacheApiService',\r\n        'repositoryFactory'\r\n    ],\r\n\r\n    props: {\r\n        extension: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            updateMessage: '',\r\n            showGitSettings: false,\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.loadExtensionsGit(this.extension);\r\n    },\r\n\r\n    computed: {\r\n        sourceOptions() {\r\n            return [\r\n                { value: 'shopware', name: 'Shopware Store' },\r\n                { value: 'git', name: 'GitHub' },\r\n            ];\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        async loadExtensionsGit(extension) {\r\n            const extensionGitRepository = this.repositoryFactory.create('plugin_git');\r\n\r\n            const criteria = new Criteria();\r\n\r\n            criteria.addFilter(Criteria.equals('pluginId', extension.localId));\r\n\r\n            const gitEntries = await extensionGitRepository.search(criteria, Shopware.Context.api);\r\n            const gitEntry = gitEntries.first();\r\n\r\n            if(gitEntry && gitEntry.source === 'git') {\r\n                this.extension.updateGitSource = gitEntry.source;\r\n                this.extension.repositoryUrl = gitEntry.githubUrl;\r\n            } else {\r\n                this.extension.updateGitSource = 'shopware';\r\n                this.extension.repositoryUrl = '';\r\n            }\r\n        },\r\n\r\n\r\n    }\r\n});\r\n\r\n","{% block sw_extension_my_extensions_index_smart_bar_actions %}\r\n    <template #smart-bar-actions>\r\n        <sw-button-group\r\n            class=\"sw-product-detail__save-button-group\"\r\n            :split-button=\"true\"\r\n        >\r\n\r\n            <sw-extension-file-upload v-if=\"acl.can('system.plugin_upload') || !extensionManagementDisabled\" />\r\n            <sw-context-button>\r\n                <template #button>\r\n                    <mt-button\r\n                        v-if=\"isShopware67\"\r\n                        class=\"sw-product-detail__button-context-menu\"\r\n                        square\r\n                        variant=\"primary\"\r\n                        size=\"default\"\r\n                        >\r\n                        <sw-icon\r\n                            name=\"regular-chevron-down-xs\"\r\n                            size=\"16\"\r\n                        />\r\n                    </mt-button>\r\n                    <sw-button\r\n                        v-else\r\n                        class=\"sw-product-detail__button-context-menu\"\r\n                        square\r\n                        variant=\"primary\"\r\n                        size=\"default\"\r\n                        >\r\n                        <sw-icon\r\n                            name=\"regular-chevron-down-xs\"\r\n                            size=\"16\"\r\n                        />\r\n                    </sw-button>\r\n                </template>\r\n                <sw-context-menu-item\r\n                        @click=\"onGitInstall\"\r\n                >\r\n                    Erweiterung via Git Installieren\r\n                </sw-context-menu-item>\r\n            </sw-context-button>\r\n\r\n        </sw-button-group>\r\n    </template>\r\n{% endblock %}\r\n\r\n{% block sw_extension_my_extensions_index %}\r\n    {% parent %}\r\n    <sw-modal\r\n            v-if=\"showGitInstallModal\"\r\n            title=\"Plugin aus Git installieren\"\r\n            @modal-close=\"showGitInstallModal = false\"\r\n            @modal-confirm=\"submitGitInstall\"\r\n            :confirm-text=\"'Installieren'\"\r\n            :cancel-text=\"'Abbrechen'\"\r\n            :is-loading=\"isInstalling\"\r\n    >\r\n        <div class=\"sw-field sw-field--medium\">\r\n            <label class=\"sw-label\">GitHub-URL</label>\r\n            <sw-text-field v-model:value=\"gitInstallUrl\" placeholder=\"https://github.com/Benutzer/Repo\" />\r\n        </div>\r\n\r\n        <template #modal-footer>\r\n            <sw-button variant=\"default\" @click=\"showGitInstallModal = false\">\r\n                Abbrechen\r\n            </sw-button>\r\n            <sw-button variant=\"primary\" @click=\"submitGitInstall\">\r\n                Installieren\r\n            </sw-button>\r\n        </template>\r\n    </sw-modal>\r\n{% endblock %}","import template from './sw-extension-my-extensions-index.html.twig';\r\n\r\nconst { Criteria } = Shopware.Data;\r\nconst { Component, Utils } = Shopware;\r\n\r\nComponent.override('sw-extension-my-extensions-index', {\r\n    template,\r\n\r\n    inject: [\r\n        'systemConfigApiService',\r\n        'shopwareExtensionService',\r\n        'extensionStoreActionService',\r\n        'cacheApiService',\r\n        'repositoryFactory'\r\n    ],\r\n\r\n    mixins: ['sw-extension-error'],\r\n\r\n    data() {\r\n        return {\r\n            showGitInstallModal: false,\r\n            gitInstallUrl: '',\r\n            gitInstallPluginName: '',\r\n            isInstalling: false,\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        isShopware67() {\r\n            const version = Shopware.Context.app.config.version.slice(0,3);\r\n            return version === '6.7';\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        onGitInstall() {\r\n            this.gitInstallUrl = '';\r\n            this.gitInstallPluginName = '';\r\n            this.showGitInstallModal = true;\r\n        },\r\n\r\n        async submitGitInstall() {\r\n            this.isInstalling = true;\r\n\r\n            try {\r\n                const response = await fetch('/api/_action/github/install-plugin', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${Shopware.Context.api.authToken.access}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        url: this.gitInstallUrl\r\n                    }),\r\n                });\r\n\r\n                const result = await response.json();\r\n\r\n                if (!result.success) {\r\n                    throw new Error(result.message);\r\n                }\r\n\r\n                this.createNotificationSuccess({\r\n                    title: 'Installation erfolgreich',\r\n                    message: `Plugin \"${result.pluginName}\" wurde installiert.`,\r\n                });\r\n\r\n                this.showGitInstallModal = false;\r\n                this.$emit('update-list');\r\n            } catch (error) {\r\n                this.createNotificationError({\r\n                    title: 'Fehler bei Installation',\r\n                    message: error.message,\r\n                });\r\n            } finally {\r\n                this.isInstalling = false;\r\n            }\r\n        },\r\n    }\r\n});"],"names":["template$2","Criteria","Component","Utils","Mixin","template","newExtension","tempExtension","error","extension","extensionGitRepository","criteria","gitEntry","pendingUpdate","updateData","version","response","result","allVersions","cleanVersion","currentVersion","higherVersions","a","b","aParts","bParts","i","aPart","bPart","versionA","versionB","extensionGitCriteria","existingGitEntry","entity","template$1"],"mappings":"AAAA,MAAeA,EAAA,o+CCGT,UAAEC,CAAQ,EAAK,SAAS,KACxB,CAAA,UAAEC,EAAWC,MAAAA,QAAOC,CAAK,EAAK,SAEpCF,EAAU,SAAS,iBAAkB,CACrC,SAAIG,EAEA,OAAQ,CACJ,yBACA,2BACA,8BACA,kBACA,mBACH,EAED,OAAQ,CAAC,oBAAoB,EAE7B,MAAO,CAAC,aAAa,EAGrB,MAAO,CACH,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,KAAM,CACF,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,UAAW,CACP,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,MAAO,CACH,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,YAAa,CACT,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,UAAW,CACP,KAAM,OACN,SAAU,GACV,QAAS,KAAO,CAAA,EACnB,CACJ,EAGD,MAAO,CACH,MAAO,CACH,UAAW,KACX,eAAgB,CAAE,EAClB,gBAAiB,KACjB,kBAAmB,GACnB,UAAW,GACX,cAAe,GACf,mBAAoB,EACvB,CACJ,EAED,SAAU,CACN,kBAAmB,CAEf,OAAI,KAAK,WAAa,OAAO,KAAK,KAAK,SAAS,EAAE,OAAS,EAChD,KAAK,UAIZ,KAAK,SAAW,KAAK,QAAQ,UACtB,KAAK,QAAQ,UAIpB,KAAK,SAAW,KAAK,QAAQ,SAAW,KAAK,QAAQ,QAAQ,UACtD,KAAK,QAAQ,QAAQ,UAGzB,EACV,CACJ,EAED,SAAU,CACN,KAAK,sBAAqB,CAC7B,EAED,MAAO,CACH,iBAAkB,CACd,QAAQC,EAAc,CACdA,GAAgBA,EAAa,SAC7B,KAAK,yBAAyBA,CAAY,CAEjD,EACD,UAAW,EACd,CACJ,EAED,QAAS,CACL,MAAM,aAAc,CAChB,GAAI,CAAC,KAAK,mBAAoB,CAC1B,KAAK,wBAAwB,CACzB,MAAO,SACP,QAAS,sCAC7B,CAAiB,EACD,MACH,CAED,KAAK,kBAAoB,GACzB,QAAQ,IAAI,sCAAuC,KAAK,iBAAiB,EACzE,GAAI,CACA,QAAQ,IAAI,wBAAyB,KAAK,iBAAiB,KAAM,QAAS,KAAK,kBAAkB,EAEjG,MAAMC,EAAgB,CAAE,GAAG,KAAK,iBAAkB,cAAe,KAAK,oBACtE,MAAM,KAAK,mBAAmBA,CAAa,CAC9C,OAAQC,EAAO,CACZ,KAAK,wBAAwB,CACzB,MAAO,kCACP,QAASA,EAAM,OACnC,CAAiB,CACjB,QAAsB,CACN,KAAK,kBAAoB,GACzB,QAAQ,IAAI,uCAAwC,KAAK,iBAAiB,CAC7E,CACJ,EAED,MAAM,QAAS,CACX,GAAI,CAAC,KAAK,gBAAiB,CACvB,KAAK,wBAAwB,CACzB,MAAO,SACP,QAAS,oCAC7B,CAAiB,EACD,MACH,CACD,KAAK,mBAAmB,KAAK,eAAe,EAC5C,QAAQ,IAAI,sBAAuB,KAAK,iBAAiB,KAAM,cAAe,KAAK,eAAe,CACrG,EAED,MAAM,yBAAyBC,EAAW,CACtC,GAAI,CACA,MAAMC,EAAyB,KAAK,kBAAkB,OAAO,YAAY,EACnEC,EAAW,IAAIV,EACrBU,EAAS,UAAUV,EAAS,OAAO,WAAYQ,EAAU,OAAO,CAAC,EAGjE,MAAMG,GADa,MAAMF,EAAuB,OAAOC,EAAU,SAAS,QAAQ,GAAG,GACzD,QAExBC,GAAYA,EAAS,UACrB,KAAK,mBAAqBA,EAAS,UAEnC,KAAK,mBAAqB,EAEjC,OAAQJ,EAAO,CACZ,QAAQ,MAAM,+BAAgCA,CAAK,EACnD,KAAK,mBAAqB,EAC7B,CACJ,EAED,MAAM,uBAAwB,CAC1B,MAAMK,EAAgB,aAAa,QAAQ,wBAAwB,EACnE,GAAIA,EACA,GAAI,CACA,MAAMC,EAAa,KAAK,MAAMD,CAAa,EAC3C,QAAQ,IAAI,wBAAyBC,CAAU,EAG3CA,EAAW,gBAAkB,KAAK,iBAAiB,OAEnD,aAAa,WAAW,wBAAwB,EAGhD,MAAM,KAAK,yBAAyB,gBAChCA,EAAW,cACXA,EAAW,cACX,EAC5B,EAEwB,KAAK,0BAA0B,CAC3B,MAAO,uBACP,QAAS,GAAG,KAAK,iBAAiB,KAAK,kCAAkCA,EAAW,OAAO,gBACvH,CAAyB,EAED,QAAQ,IAAI,4BAA4B,EAE/C,OAAQN,EAAO,CACZ,QAAQ,MAAM,kCAAmCA,CAAK,EACtD,aAAa,WAAW,wBAAwB,CACnD,CAER,EAED,MAAM,mBAAmBO,EAAS,CAC9B,KAAK,UAAY,GACjB,KAAK,cAAgB,4BACrB,GAAI,CACA,MAAMC,EAAW,MAAM,MAAM,oCAAqC,CAC9D,OAAQ,OACR,QAAS,CACL,eAAgB,mBAChB,cAAe,UAAU,SAAS,QAAQ,IAAI,UAAU,MAAM,EACjE,EACD,KAAM,KAAK,UAAU,CACjB,IAAK,KAAK,mBACV,KAAM,KAAK,iBAAiB,KAC5B,QAASD,CACjC,CAAqB,CACrB,CAAiB,EAGKE,EAAS,MAAMD,EAAS,OAG9B,GAFA,QAAQ,IAAIC,CAAM,EAEd,CAACD,EAAS,GACV,MAAM,IAAI,MAAMC,EAAO,SAAW,wBAAwB,EAG9D,KAAK,0BAA0B,CAC3B,MAAO,qBACP,QAAS,KAAK,iBAAiB,MAAQ,sBAAwBF,EAAU,0CAC7F,CAAiB,EAGD,aAAa,QAAQ,yBAA0B,KAAK,UAAU,CAC1D,cAAe,KAAK,iBAAiB,KACrC,cAAe,KAAK,iBAAiB,KACrC,QAASA,CACZ,CAAA,CAAC,EAGF,WAAW,SAAY,CACnB,MAAM,KAAK,gBAAgB,QAC3B,OAAO,SAAS,QACnB,EAAE,GAAI,EAEP,KAAK,UAAY,EACpB,MAAe,CACZ,KAAK,wBAAwB,CACzB,MAAO,wBACP,QAAS,eAC7B,CAAiB,EACD,KAAK,UAAY,EACpB,CACJ,EAED,MAAM,mBAAmBN,EAAW,CAChC,GAAI,CACA,GAAIA,EAAU,cAAc,OAAS,EAAG,CAQpC,MAAMQ,EAAS,MAPE,MAAM,MAAM,0CAA0C,mBAAmBR,EAAU,aAAa,CAAC,GAAI,CAClH,OAAQ,MACR,QAAS,CACL,cAAe,UAAU,SAAS,QAAQ,IAAI,UAAU,MAAM,EACjE,CACzB,CAAqB,GAE6B,OAG9B,GAFA,QAAQ,IAAIQ,CAAM,EAEdA,EAAO,SAAWA,EAAO,SAAU,CAEnC,MAAMC,EAAcD,EAAO,SAAS,IAAIF,GAAW,CAE/C,MAAMI,EAAeJ,EAAQ,QAAQ,KAAM,EAAE,EAC7C,MAAO,CACH,SAAUA,EACV,MAAOI,EACP,MAAOA,EACP,MAAOJ,CACvC,CACA,CAAyB,EAGKK,EAAiBX,EAAU,QAAQ,QAAQ,KAAM,EAAE,EAGnDY,EAAiBH,EAAY,OAAOH,GAC/B,KAAK,gBAAgBA,EAAQ,MAAOK,CAAc,CAC5D,EAGD,KAAK,eAAiBC,EAAe,IAAIN,IAAY,CACjD,MAAOA,EAAQ,MACf,MAAOA,EAAQ,KAClB,EAAC,EAEEM,EAAe,OAAS,GAExB,KAAK,gBAAkBA,EAAe,CAAC,EAAE,MAEzC,KAAK,uBAAuB,CACxB,MAAO,GAAGA,EAAe,MAAM,+BAC/B,QAAS,+BAA+BA,EAAe,CAAC,EAAE,KAAK,EAC/F,CAA6B,GAED,KAAK,uBAAuB,CACxB,MAAO,GAAGZ,EAAU,KAAK,eACzB,QAAS,wCAAwCW,CAAc,EAC/F,CAA6B,CAE7B,MACwB,KAAK,wBAAwB,CACzB,MAAO,iBACP,QAAS,6CACrC,CAAyB,CAEzB,MACoB,KAAK,wBAAwB,CACzB,MAAO,iBACP,QAAS,uBACjC,CAAqB,CAER,OAAQZ,EAAO,CACZ,KAAK,wBAAwB,CACzB,MAAO,sCAAsCC,EAAU,IAAI,GAC3D,QAASD,EAAM,OACnC,CAAiB,CACJ,CACJ,EAGD,gBAAgBc,EAAGC,EAAG,CAClB,MAAMC,EAASF,EAAE,MAAM,GAAG,EAAE,IAAI,MAAM,EAChCG,EAASF,EAAE,MAAM,GAAG,EAAE,IAAI,MAAM,EAEtC,QAASG,EAAI,EAAGA,EAAI,KAAK,IAAIF,EAAO,OAAQC,EAAO,MAAM,EAAGC,IAAK,CAC7D,MAAMC,EAAQH,EAAOE,CAAC,GAAK,EACrBE,EAAQH,EAAOC,CAAC,GAAK,EAE3B,GAAIC,EAAQC,EAAO,MAAO,GAC1B,GAAID,EAAQC,EAAO,MAAO,EAC7B,CACD,MAAO,EACV,EAGD,gBAAgBC,EAAUC,EAAU,CAChC,OAAO,KAAK,gBAAgBD,EAAUC,CAAQ,EAAI,CACrD,EAED,kBAAmB,CACf,KAAK,wBAAuB,EAC5B,KAAK,wBAAuB,CAC/B,EAED,yBAA0B,CACtB,OAAO,KAAK,gBAAgB,MAAO,EAAC,KAAK,IAAM,CAC3C,OAAO,SAAS,QAChC,CAAa,CACJ,EAED,MAAM,gBAAiB,CACnB,GAAI,CACA,KAAK,UAAY,GAEjB,MAAMpB,EAAyB,KAAK,kBAAkB,OAAO,YAAY,EAEzE,GAAI,CAAC,KAAK,iBAAiB,QACvB,MAAM,IAAI,MAAM,kCAAkC,EAGtD,MAAMqB,EAAuB,IAAI9B,EACjC8B,EAAqB,UAAU9B,EAAS,OAAO,WAAY,KAAK,iBAAiB,OAAO,CAAC,EAGzF,MAAM+B,GADyB,MAAMtB,EAAuB,OAAOqB,EAAsB,SAAS,QAAQ,GAAG,GAC7D,QAGhD,GAAI,CAAC,KAAK,oBAAsB,KAAK,mBAAmB,KAAM,IAAK,GAAI,CAC/DC,IAEA,MAAMtB,EAAuB,OAAOsB,EAAiB,GAAI,SAAS,QAAQ,GAAG,EAC7E,KAAK,0BAA0B,CAC3B,MAAO,uBACP,QAAS,wCACrC,CAAyB,GAGL,MACH,CAGD,IAAIC,EAEAD,EACAC,EAASD,GAETC,EAASvB,EAAuB,OAAO,SAAS,QAAQ,GAAG,EAC3DuB,EAAO,SAAW,KAAK,iBAAiB,QACxCA,EAAO,OAAS,OAEpBA,EAAO,UAAY,KAAK,mBACxBA,EAAO,OAAS,MAEhB,MAAMvB,EAAuB,KAAKuB,EAAQ,SAAS,QAAQ,GAAG,EAE9D,KAAK,0BAA0B,CAC3B,MAAO,0BACP,QAAS,2CAC7B,CAAiB,CAEJ,OAAQzB,EAAO,CACZ,KAAK,wBAAwB,CACzB,MAAO,wBACP,QAASA,EAAM,OACnC,CAAiB,CACjB,QAAsB,CACN,KAAK,UAAY,EACpB,CACJ,CAIT,CAEA,CAAC,ECxaD,MAAe0B,EAAA,iuNCET,UAAEjC,CAAQ,EAAK,SAAS,KACxB,CAAA,UAAEC,EAAWC,MAAAA,EAAO,MAAAC,CAAK,EAAK,SAEpCF,EAAU,SAAS,yBAA0B,CAC7C,SAAIG,EAEA,OAAQ,CACJ,yBACA,2BACA,8BACA,kBACA,mBACH,EAED,MAAO,CACH,UAAW,CACP,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,UAAW,GACX,cAAe,GACf,gBAAiB,EACpB,CACJ,EAED,SAAU,CACN,KAAK,kBAAkB,KAAK,SAAS,CACxC,EAED,SAAU,CACN,eAAgB,CACZ,MAAO,CACH,CAAE,MAAO,WAAY,KAAM,gBAAkB,EAC7C,CAAE,MAAO,MAAO,KAAM,QAAU,CAChD,CACS,CACJ,EAED,QAAS,CACL,MAAM,kBAAkBI,EAAW,CAC/B,MAAMC,EAAyB,KAAK,kBAAkB,OAAO,YAAY,EAEnEC,EAAW,IAAIV,EAErBU,EAAS,UAAUV,EAAS,OAAO,WAAYQ,EAAU,OAAO,CAAC,EAGjE,MAAMG,GADa,MAAMF,EAAuB,OAAOC,EAAU,SAAS,QAAQ,GAAG,GACzD,QAEzBC,GAAYA,EAAS,SAAW,OAC/B,KAAK,UAAU,gBAAkBA,EAAS,OAC1C,KAAK,UAAU,cAAgBA,EAAS,YAExC,KAAK,UAAU,gBAAkB,WACjC,KAAK,UAAU,cAAgB,GAEtC,CAGJ,CACL,CAAC,EClED,MAAeP,EAAA,wiDCET,CAAE,SAAAJ,CAAQ,EAAK,SAAS,KACxB,CAAE,UAAAC,EAAW,MAAAC,CAAO,EAAG,SAE7BD,EAAU,SAAS,mCAAoC,CACnD,SAAAG,EAEA,OAAQ,CACJ,yBACA,2BACA,8BACA,kBACA,mBACH,EAED,OAAQ,CAAC,oBAAoB,EAE7B,MAAO,CACH,MAAO,CACH,oBAAqB,GACrB,cAAe,GACf,qBAAsB,GACtB,aAAc,EAC1B,CACK,EAED,SAAU,CACN,cAAe,CAEX,OADgB,SAAS,QAAQ,IAAI,OAAO,QAAQ,MAAM,EAAE,CAAC,IAC1C,KACtB,CACJ,EAED,QAAS,CACL,cAAe,CACX,KAAK,cAAgB,GACrB,KAAK,qBAAuB,GAC5B,KAAK,oBAAsB,EAC9B,EAED,MAAM,kBAAmB,CACrB,KAAK,aAAe,GAEpB,GAAI,CAYA,MAAMY,EAAS,MAXE,MAAM,MAAM,qCAAsC,CAC/D,OAAQ,OACR,QAAS,CACL,eAAgB,mBAChB,cAAe,UAAU,SAAS,QAAQ,IAAI,UAAU,MAAM,EACjE,EACD,KAAM,KAAK,UAAU,CACjB,IAAK,KAAK,aAClC,CAAqB,CACrB,CAAiB,GAE6B,OAE9B,GAAI,CAACA,EAAO,QACR,MAAM,IAAI,MAAMA,EAAO,OAAO,EAGlC,KAAK,0BAA0B,CAC3B,MAAO,2BACP,QAAS,WAAWA,EAAO,UAAU,sBACzD,CAAiB,EAED,KAAK,oBAAsB,GAC3B,KAAK,MAAM,aAAa,CAC3B,OAAQT,EAAO,CACZ,KAAK,wBAAwB,CACzB,MAAO,0BACP,QAASA,EAAM,OACnC,CAAiB,CACjB,QAAsB,CACN,KAAK,aAAe,EACvB,CACJ,CACJ,CACL,CAAC"}